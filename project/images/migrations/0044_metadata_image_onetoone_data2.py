# Generated by Django 4.2.16 on 2025-06-29 10:13

from django.db import migrations


def delete_metadata_with_no_image(apps, schema_editor):
    """
    Delete metadata which don't have an image (and say how many
    such metadata there are before deleting). This allows us to subsequently
    set the Metadata.image field to be non-null.

    Having a Metadata without an associated Image is an error case, and
    renders us unable to use the Metadata for anything. So we can delete them.
    """
    Metadata = apps.get_model('images', 'Metadata')
    metadata_with_no_image = Metadata.objects.filter(image__isnull=True)
    count = metadata_with_no_image.count()

    # Only prompt if there are Metadata to delete. This way, the migration
    # won't bring up a prompt when initializing unit tests.
    if count > 0:
        input_text = input(
            f"Detected {count} Metadata objects without corresponding Images."
            f" These Metadata will be deleted now. OK? [y/N]: "
        )
        if input_text.lower() != 'y':
            raise RuntimeError("Migration aborted.")

        metadata_with_no_image.delete()
        print("Deleted those Metadata.")


class Migration(migrations.Migration):

    dependencies = [
        ('images', '0043_metadata_image_onetoone_schema2'),
    ]

    operations = [
        migrations.RunPython(
            delete_metadata_with_no_image, migrations.RunPython.noop,
            elidable=True,
        ),
    ]
